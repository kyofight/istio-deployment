---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: logging
  name: kibana-config
  labels:
    app: kibana
data:
  kibana.yml: |-
    server.host: 0.0.0.0
    elasticsearch:
      hosts: ${ELASTICSEARCH_HOSTS}
#      username: ${ELASTICSEARCH_USER}
#      password: ${ELASTICSEARCH_PASSWORD}
---

apiVersion: v1
kind: Service
metadata:
  namespace: logging
  name: kibana
  labels:
    app: kibana
spec:
  ports:
  - port: 5601
    name: webinterface
    targetPort: 5601
  selector:
    app: kibana

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: logging
  name: kibana
  labels:
    app: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: 'docker/default'
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:7.3.0
        ports:
        - containerPort: 5601
          name: webinterface
        env:
        - name: ELASTICSEARCH_HOSTS
          value: "http://elasticsearch-client.logging.svc.cluster.local:9200"
#        - name: ELASTICSEARCH_USER
#          valueFrom:
#            secretKeyRef:
#              name: elasticsearch-pw-elastic
#              key: username
#        - name: ELASTICSEARCH_PASSWORD
#          valueFrom:
#            secretKeyRef:
#              name: elasticsearch-pw-elastic
#              key: password
#        volumeMounts:
#        - name: config
#          mountPath: /usr/share/kibana/config/kibana.yml
#          readOnly: true
#          subPath: kibana.yml
#      volumes:
#      - name: config
#        configMap:
#          name: kibana-config